{"version":3,"file":"static/webpack/static/development/pages/index.js.bf4497b0b45f734321be.hot-update.js","sources":["webpack:///./components/createVote.js","webpack:///./components/getOwnerInfo.js","webpack:///./components/provider.js","webpack:///./components/userInfo.js","webpack:///./components/viewResult.js","webpack:///./pages/index.js"],"sourcesContent":["import { eth, getInstance } from './provider'\nimport Vote from \"../components/artifacts/Vote.json\"\n\nexport class SetUserInfo extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {value:''};\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setName = this.setName.bind(this);\n        // this.sendVote = this.sendVote.bind(this);\n    }\n\n    setName = async (name) => {\n        const storage = await getInstance(Vote)\n        const addresses = await eth.getAccounts()\n        await storage.createVote(name,{from:addresses[0]})\n    }\n\n//    sendVote = async() => {\n//         const storage = await getInstance(Vote)\n//         const addresses = await eth.getAccounts()\n//         await storage.sendVote({from:addresses[0]})\n//     }\n\n    async handleChange(event){\n        this.setState({value:event.target.value});\n    }\n\n    async handleSubmit(event){\n        console.log(\"User was Created:\" + this.state.value);\n        event.preventDefault();\n        await this.setName(this.state.value)\n        // await this.sendVote()\n        // this.props.addUser(this.state.value)\n        this.setState({value : \"\"})\n        // web3.eth.getTransaction(transactionHash [, callback])\n\n    }\n\n    render(){\n        return(\n            <div>\n                <form className=\"voterForm\" onSubmit={this.handleSubmit}>\n                    <label>\n                        Please input your select:\n                        <input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n                    </label>\n                    <input className=\"btn\" type=\"submit\" value=\"Submit\"/>\n                </form>\n                {/* {this.state.value} */}\n                {/* <p>{this.state.value}</p> */}\n                <style jsx>{`\n                    .btn {\n                        margin:5px;\n                        color: white;\n                        display: inline-block;\n                        opacity: 0.8;\n                        border-radius: 4px;\n                        text-align: center;\n                        background-color: #239b76;\n\n                    }\n                    .btn:hover {\n                        opacity: 1;\n                    }\n                    .voterForm {\n                    }\n                    `}</style>\n            </div>\n        )\n    }\n}\n","import { getInstance } from './provider'\nimport Vote from \"../components/artifacts/Vote.json\"\n\nexport class GetOwnerInfo extends React.Component{\n    constructor(props){\n        super(props)\n        this.state =  {ownerAddress : \"\"}\n    }\n\n    async componentDidMount(){\n        const storage = await getInstance(Vote)\n        const ownerProfile = await storage.ownerAddr.call()\n        this.setState({ownerAddress : ownerProfile})\n    }\n\n    render() {\n        return(\n            <div>\n                <p>Contract Owner address:    {this.state.ownerAddress}</p>\n            </div>\n        )\n    }\n}","import Web3 from \"web3\"\nimport contract from \"truffle-contract\"\n\nexport const getInstance = artifact => {\n    const contractObj = contract(artifact)\n    contractObj.setProvider(provider())\n    return contractObj.deployed()\n}\n\nconst provider = () => {\n    // If the user has MetaMask:\n    if (typeof web3 !== 'undefined') {\n        return web3.currentProvider\n    } else {\n        console.error(\"You need to install MetaMask for this app to work!\")\n    }\n}\n\nexport const eth = new Web3(provider()).eth","import { eth } from './provider'\n\nexport class UserInfo extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {userAddress: \"\"}\n        this.state = {userBalance: \"\"}\n    }\n\n    async componentDidMount(){\n        const addresses = await eth.getAccounts()\n        this.setState({userAddress:addresses})\n        const balance = await eth.getBalance(addresses[0])\n        const etherValue = await web3.fromWei(balance, 'ether');\n        this.setState({userBalance:etherValue})\n    }\n\n    render () {\n        return (\n            <div>\n                <p>Your Address :    {this.state.userAddress}</p>\n                <p>Your Balance:   {this.state.userBalance} ETH</p>\n            </div>\n        )\n    }\n}\n\n// export default UserInfo;","import { eth, getInstance } from './provider'\nimport Vote from \"../components/artifacts/Vote.json\"\nimport Web3 from \"web3\"\n\nexport class ViewResult extends React.Component{\n    constructor(props){\n        super(props)\n        this.state =  {result : []}\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\n    render() {\n        const list = this.state.result.map(user => {\n            return(\n                <li key={user}>\n                {user}\n                </li>\n            )\n        })\n\n        return(\n            <div>\n                <h4>Get Result</h4>\n                <button onClick={this.handleOnClick}>Result</button>\n                <h5>Ballots List</h5>\n                <ul>{list}</ul>\n            </div>\n        )\n    }\n\n    handleOnClick = async() => {\n        const storage = await getInstance(Vote)\n        const resultVoting = await storage.viewResult()\n        // console.log(\"result\",storage.result.call())\n        console.log(resultVoting)\n        // console.log(ownerProfile)\n        console.log(this.state.result)\n        this.setState({result:resultVoting})\n        //  これだと二次元配列ができてしまう\n        // this.setState({\n        //     result :  [...this.state.result, resultVoting]\n        // })\n        console.log(this.state.result)\n    }\n}","import { GetOwnerInfo } from \"../components/getOwnerInfo\";\nimport { SetUserInfo } from \"../components/createVote\";\nimport { ViewResult } from \"../components/viewResult\";\nimport { UserInfo } from \"../components/userInfo\";\n\nexport default class IndexPage extends React.Component {\n    render() {\n      return (\n        <div>\n            <UserInfo />\n            <GetOwnerInfo />\n            <SetUserInfo />\n            <ViewResult />\n        </div>\n      )\n    }\n  }"],"mappings":"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","sourceRoot":""}